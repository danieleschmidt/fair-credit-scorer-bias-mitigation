# Production Deployment Configuration
# Fair Credit Scorer - Bias Mitigation System

# Infrastructure Configuration
kubernetes:
  cluster_name: "production-cluster"
  namespace: "fair-credit-system"
  region: "us-west-2"
  node_selector:
    environment: "production"
    workload: "ml-inference"
  
  # Resource Management
  resources:
    requests:
      cpu: "2"
      memory: "4Gi"
    limits:
      cpu: "4"
      memory: "8Gi"
  
  # High Availability
  replicas:
    min: 3
    max: 20
    target_cpu_utilization: 70
    target_memory_utilization: 80
  
  # Rolling Update Strategy
  strategy:
    type: "RollingUpdate"
    max_surge: "25%"
    max_unavailable: "0%"

# Container Registry Configuration
registry:
  url: "ghcr.io"
  organization: "terragon-labs"
  repository: "fair-credit-scorer"
  
image_name: "fair-credit-scorer"
image_pull_policy: "IfNotPresent"

# Database Configuration
database:
  type: "postgresql"
  version: "15"
  instance_class: "db.r5.xlarge"
  storage: "500Gi"
  storage_class: "gp3"
  backup_retention: "30d"
  
  # High Availability
  multi_az: true
  replicas: 3
  
  # Performance
  connection_pool:
    min_size: 10
    max_size: 100
    timeout: 30
  
  # Security
  ssl_mode: "require"
  encryption_at_rest: true
  
  # Monitoring
  monitoring:
    enabled: true
    slow_query_log: true
    query_duration_threshold: "1s"

# Cache Configuration
cache:
  type: "redis"
  version: "7"
  instance_class: "cache.r6g.large"
  
  # Configuration
  maxmemory_policy: "allkeys-lru"
  maxmemory: "4gb"
  
  # High Availability
  replication_group_size: 3
  automatic_failover: true
  
  # Security
  auth_token_enabled: true
  transit_encryption: true
  at_rest_encryption: true

# Application Configuration
application:
  # API Settings
  api:
    host: "0.0.0.0"
    port: 8000
    workers: 4
    timeout: 300
    max_request_size: "10MB"
    
  # Security
  security:
    csrf_protection: true
    rate_limiting:
      enabled: true
      requests_per_minute: 1000
      burst_size: 100
    input_validation: "strict"
    audit_logging: true
    
  # Model Configuration
  models:
    auto_reload: true
    cache_predictions: true
    prediction_timeout: 30
    batch_size: 100
    
  # Fairness Configuration
  fairness:
    protected_attributes:
      - "race"
      - "gender" 
      - "age_group"
    thresholds:
      demographic_parity: 0.05
      equalized_odds: 0.05
      calibration: 0.05
    
  # Feature Flags
  feature_flags:
    experimental_algorithms: false
    quantum_fairness: true
    neural_fairness: true
    advanced_monitoring: true

# Monitoring Configuration
monitoring:
  prometheus:
    enabled: true
    scrape_interval: "15s"
    retention: "30d"
    
  grafana:
    enabled: true
    admin_user: "admin"
    dashboards:
      - "fairness-metrics"
      - "performance-metrics" 
      - "infrastructure-health"
      - "security-audit"
    
  alerting:
    enabled: true
    notification_channels:
      - slack
      - pagerduty
      - email
    
    # Alert Rules
    rules:
      # Fairness Alerts
      - name: "high_fairness_violation"
        condition: "fairness_demographic_parity_difference > 0.1"
        severity: "critical"
        duration: "5m"
        
      - name: "model_accuracy_drop"
        condition: "model_accuracy < 0.8"
        severity: "warning"
        duration: "10m"
        
      # Performance Alerts  
      - name: "high_prediction_latency"
        condition: "prediction_duration_seconds{quantile=\"0.95\"} > 1.0"
        severity: "warning"
        duration: "5m"
        
      - name: "high_cpu_usage"
        condition: "container_cpu_usage_seconds_total > 0.8"
        severity: "warning"
        duration: "10m"
        
      # Infrastructure Alerts
      - name: "database_connection_issue"
        condition: "up{job=\"postgres-exporter\"} == 0"
        severity: "critical"
        duration: "2m"
        
      - name: "pod_crash_looping"
        condition: "rate(kube_pod_container_status_restarts_total[5m]) > 0"
        severity: "critical"
        duration: "1m"

# Security Configuration
security:
  # Network Security
  network_policies:
    enabled: true
    default_deny: true
    
  # Pod Security
  pod_security:
    enabled: true
    standards: "restricted"
    
  # RBAC
  rbac:
    enabled: true
    service_accounts:
      - name: "fair-credit-scorer"
        permissions:
          - "get,list,watch:configmaps,secrets"
          - "get,list,watch:pods"
    
  # Image Security
  image_scanning:
    enabled: true
    registry_scanning: true
    vulnerability_threshold: "HIGH"
    
  # Runtime Security
  runtime_security:
    enabled: true
    policies:
      - "block_privileged_containers"
      - "block_host_network"
      - "block_host_filesystem"
      
  # Compliance
  compliance:
    frameworks:
      - "SOC2"
      - "GDPR"
      - "CCPA"
    audit_logging: true
    data_encryption:
      at_rest: true
      in_transit: true

# Backup Configuration
backup:
  enabled: true
  
  # Database Backups
  database:
    frequency: "daily"
    retention: "30d"
    encryption: true
    cross_region_replication: true
    
  # Application Data
  application_data:
    frequency: "hourly"
    retention: "7d"
    
  # Model Artifacts
  models:
    frequency: "daily"
    retention: "90d"
    versioning: true

# Disaster Recovery
disaster_recovery:
  enabled: true
  
  # Multi-Region Setup
  regions:
    primary: "us-west-2"
    secondary: "us-east-1"
    
  # RTO/RPO Targets
  recovery_time_objective: "1h"
  recovery_point_objective: "15m"
  
  # Automated Failover
  automated_failover:
    enabled: true
    health_check_interval: "30s"
    failure_threshold: 3

# Cost Optimization
cost_optimization:
  # Autoscaling
  autoscaling:
    enabled: true
    scale_down_delay: "5m"
    scale_up_threshold: 0.7
    scale_down_threshold: 0.3
    
  # Resource Management
  resource_requests:
    right_sizing: true
    utilization_target: 0.8
    
  # Spot Instances
  spot_instances:
    enabled: false  # Disabled for production stability
    max_spot_percentage: 0
    
  # Reserved Capacity
  reserved_instances:
    enabled: true
    term: "1year"
    payment_option: "partial_upfront"

# Quality Gates
quality_gates:
  enabled: true
  
  # Pre-deployment
  pre_deployment:
    - security_scan
    - vulnerability_assessment
    - compliance_validation
    - performance_benchmarks
    
  # Post-deployment
  post_deployment:
    - health_checks
    - smoke_tests
    - performance_validation
    - fairness_validation
    
  # Thresholds
  thresholds:
    security_score: 95
    performance_regression: 5  # percentage
    availability: 99.9
    fairness_compliance: 100

# Integration Configuration
integrations:
  # CI/CD
  github_actions:
    enabled: true
    environments:
      - staging
      - production
    
  # Notification Services
  slack:
    enabled: true
    channels:
      deployments: "#deployments"
      alerts: "#alerts"
      incidents: "#incidents"
      
  pagerduty:
    enabled: true
    integration_key: "${PAGERDUTY_INTEGRATION_KEY}"
    
  # External APIs
  external_apis:
    openai:
      enabled: true
      rate_limit: 1000
      timeout: 30
      
    monitoring_services:
      enabled: true
      datadog: false
      new_relic: false
      custom_metrics: true

# Environment Variables
environment_variables:
  ENVIRONMENT: "production"
  LOG_LEVEL: "INFO"
  DEBUG: "false"
  PYTHONPATH: "/app/src"
  
  # Security
  SECURITY_ENABLED: "true"
  AUDIT_LOGGING: "true"
  
  # Performance
  ASYNC_WORKERS: "4"
  CACHE_ENABLED: "true"
  
  # ML Model Settings
  MODEL_CACHE_SIZE: "1000"
  PREDICTION_BATCH_SIZE: "100"
  
  # Fairness Settings
  FAIRNESS_MONITORING: "true"
  BIAS_DETECTION_THRESHOLD: "0.05"

# Validation Rules
validation:
  # Health Checks
  health_checks:
    liveness:
      path: "/health/live"
      initial_delay: 60
      period: 30
      timeout: 10
      
    readiness:
      path: "/health/ready" 
      initial_delay: 30
      period: 10
      timeout: 5
      
    startup:
      path: "/health/startup"
      initial_delay: 10
      period: 10
      timeout: 5
      failure_threshold: 10
  
  # Service Validation
  services:
    database:
      connection_test: true
      query_test: "SELECT 1"
      
    cache:
      ping_test: true
      write_test: true
      
    external_apis:
      connectivity_test: true
      authentication_test: true