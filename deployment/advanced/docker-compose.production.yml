version: '3.8'

services:
  # Main Application
  fair-credit-scorer:
    image: fair-credit-scorer:${VERSION:-latest}
    container_name: fair-credit-scorer-app
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - METRICS_ENABLED=true
      - SECURITY_ENABLED=true
      - DATABASE_URL=postgresql://fairness_user:${DB_PASSWORD}@postgres:5432/fairness_db
      - REDIS_URL=redis://redis:6379/0
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - MONITORING_ENDPOINT=http://prometheus:9090
    depends_on:
      - postgres
      - redis
      - elasticsearch
    volumes:
      - ./logs:/app/logs
      - ./models:/app/models
    networks:
      - fairness-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G

  # API Gateway / Load Balancer
  nginx:
    image: nginx:alpine
    container_name: fair-credit-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - fair-credit-scorer
    networks:
      - fairness-network
    restart: unless-stopped

  # Database
  postgres:
    image: postgres:15
    container_name: fair-credit-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=fairness_db
      - POSTGRES_USER=fairness_user
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
      - ./db/backup:/backup
    networks:
      - fairness-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fairness_user -d fairness_db"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Cache
  redis:
    image: redis:7-alpine
    container_name: fair-credit-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/etc/redis/redis.conf:ro
    networks:
      - fairness-network
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Search & Analytics
  elasticsearch:
    image: elasticsearch:8.11.0
    container_name: fair-credit-elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
      - xpack.monitoring.collection.enabled=true
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - fairness-network
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Monitoring Stack
  prometheus:
    image: prom/prometheus:latest
    container_name: fair-credit-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/alert-rules.yml:/etc/prometheus/alert-rules.yml:ro
      - prometheus_data:/prometheus
    networks:
      - fairness-network
    ports:
      - "9090:9090"
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: fair-credit-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_FEATURE_TOGGLES_ENABLE=publicDashboards
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - fairness-network
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager:latest
    container_name: fair-credit-alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/config.yml:ro
      - alertmanager_data:/alertmanager
    networks:
      - fairness-network
    ports:
      - "9093:9093"
    restart: unless-stopped

  # Log Management
  filebeat:
    image: elastic/filebeat:8.11.0
    container_name: fair-credit-filebeat
    user: root
    volumes:
      - ./monitoring/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - filebeat_data:/usr/share/filebeat/data
    networks:
      - fairness-network
    depends_on:
      - elasticsearch
    restart: unless-stopped

  # Backup Service
  backup:
    image: postgres:15
    container_name: fair-credit-backup
    environment:
      - PGUSER=fairness_user
      - PGPASSWORD=${DB_PASSWORD}
      - PGDATABASE=fairness_db
      - PGHOST=postgres
    volumes:
      - ./backup:/backup
      - ./scripts/backup.sh:/backup.sh:ro
    networks:
      - fairness-network
    depends_on:
      - postgres
    restart: "no"
    profiles: ["backup"]

  # Model Training Service
  model-trainer:
    image: fair-credit-scorer:${VERSION:-latest}
    container_name: fair-credit-trainer
    command: python -m src.training.scheduled_trainer
    environment:
      - ENVIRONMENT=production
      - TRAINING_ENABLED=true
      - MODEL_REGISTRY_URL=http://fair-credit-scorer:8000/models
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    volumes:
      - ./models:/app/models
      - ./training_data:/app/data
    networks:
      - fairness-network
    depends_on:
      - fair-credit-scorer
      - mlflow
    restart: unless-stopped

  # ML Model Registry
  mlflow:
    image: ghcr.io/mlflow/mlflow:latest
    container_name: fair-credit-mlflow
    command: >
      mlflow server
      --backend-store-uri postgresql://fairness_user:${DB_PASSWORD}@postgres:5432/mlflow_db
      --default-artifact-root file:///mlflow/artifacts
      --host 0.0.0.0
      --port 5000
    environment:
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=${MINIO_ACCESS_KEY}
      - AWS_SECRET_ACCESS_KEY=${MINIO_SECRET_KEY}
    volumes:
      - mlflow_data:/mlflow/artifacts
    networks:
      - fairness-network
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - minio
    restart: unless-stopped

  # Object Storage for Models
  minio:
    image: minio/minio:latest
    container_name: fair-credit-minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
    volumes:
      - minio_data:/data
    networks:
      - fairness-network
    ports:
      - "9000:9000"
      - "9001:9001"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  elasticsearch_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  alertmanager_data:
    driver: local
  filebeat_data:
    driver: local
  mlflow_data:
    driver: local
  minio_data:
    driver: local

networks:
  fairness-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16