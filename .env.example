# Fair Credit Scorer Environment Configuration
# Copy this file to .env and update with your specific values

# ================================
# Application Configuration
# ================================

# Application environment (development, staging, production)
APP_ENV=development

# Application log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Random state for reproducibility
RANDOM_STATE=42

# Default data split test size
TEST_SIZE=0.3

# Default probability threshold for binary classification
CLASSIFICATION_THRESHOLD=0.5

# ================================
# Data Configuration
# ================================

# Data directory path (relative to project root)
DATA_PATH=data/

# Dataset filename
DATASET_FILENAME=credit_scoring_dataset.csv

# Enable data versioning (true/false)
ENABLE_DATA_VERSIONING=true

# ================================
# Model Configuration
# ================================

# Default bias mitigation method (baseline, reweight, postprocess, expgrad)
DEFAULT_MITIGATION_METHOD=baseline

# Cross-validation folds (set to 0 to disable CV)
CV_FOLDS=5

# Model output directory
MODEL_OUTPUT_DIR=models/

# Enable model versioning
ENABLE_MODEL_VERSIONING=true

# ================================
# Monitoring and Observability
# ================================

# Enable metrics collection
ENABLE_METRICS=true

# Metrics server port
METRICS_PORT=8080

# Health check endpoint port
HEALTH_CHECK_PORT=8081

# Enable structured logging
ENABLE_STRUCTURED_LOGGING=true

# ================================
# Security Configuration
# ================================

# Enable security headers
ENABLE_SECURITY_HEADERS=true

# CORS origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:8080

# ================================
# Development Tools Configuration
# ================================

# Jupyter notebook configuration
JUPYTER_PORT=8888
JUPYTER_TOKEN=development

# MkDocs development server
MKDOCS_PORT=8000

# Testing configuration
PYTEST_WORKERS=auto
COVERAGE_THRESHOLD=90

# ================================
# Repository Hygiene Bot Configuration
# ================================

# GitHub configuration (for repository hygiene bot)
# GITHUB_TOKEN=your-github-token
# GITHUB_USER=your-username
# GITHUB_ORG=your-organization

# Bot behavior configuration
# HYGIENE_BOT_DRY_RUN=true
# HYGIENE_BOT_VERBOSE=false
# HYGIENE_BOT_MAX_REPOS=10

# ================================
# CI/CD Configuration
# ================================

# Build configuration
BUILD_NUMBER=local
BUILD_SHA=development
BUILD_BRANCH=main

# Deployment target
DEPLOYMENT_TARGET=development

# Feature flags
ENABLE_FEATURE_FLAGS=false

# ================================
# Performance and Resource Limits
# ================================

# Memory limits (in MB)
MAX_MEMORY_MB=2048

# CPU limits (number of cores)
MAX_CPU_CORES=4

# Request timeout (in seconds)
REQUEST_TIMEOUT=30

# Cache settings
CACHE_TTL=3600
CACHE_MAX_SIZE=1000

# ================================
# Advanced Configuration
# ================================

# Enable experimental features
ENABLE_EXPERIMENTAL_FEATURES=false

# Debug mode (enables additional logging and checks)
DEBUG=false

# Profiling (enables performance profiling)
ENABLE_PROFILING=false

# Data quality checks
ENABLE_DATA_QUALITY_CHECKS=true
DATA_QUALITY_THRESHOLD=0.95

# Fairness monitoring
FAIRNESS_ALERT_THRESHOLD=0.1
ENABLE_FAIRNESS_MONITORING=true

# ================================
# Notes
# ================================

# 1. Never commit the actual .env file to version control
# 2. Use strong, unique values for all secrets and keys
# 3. Regularly rotate API keys and access tokens
# 4. Use environment-specific values for different deployment stages
# 5. Consider using secret management tools for production deployments