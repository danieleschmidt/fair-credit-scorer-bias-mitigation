openapi: 3.0.3
info:
  title: Fair Credit Scorer API
  description: |
    A comprehensive fair credit scoring system with bias mitigation capabilities.
    
    This API provides endpoints for:
    - Credit score predictions with fairness guarantees
    - Model performance evaluation and bias metrics
    - Health monitoring and system status
    - Administrative functions and configuration
    
    ## Authentication
    All API endpoints require authentication via API key or OAuth 2.0.
    
    ## Rate Limiting
    API calls are rate limited to 1000 requests per hour per API key.
    
    ## Fairness Guarantees
    All predictions include fairness metrics and bias assessments to ensure 
    equitable treatment across demographic groups.
  version: 0.2.0
  contact:
    name: Fair Credit Scorer Team
    email: support@fair-credit-scorer.com
    url: https://github.com/username/fair-credit-scorer-bias-mitigation
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.fair-credit-scorer.com/v1
    description: Production server
  - url: https://staging-api.fair-credit-scorer.com/v1
    description: Staging server
  - url: http://localhost:8080/v1
    description: Local development server

paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns the current health status of the system
      operationId: getHealth
      tags:
        - System
      responses:
        '200':
          description: System is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'
        '503':
          description: System is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'

  /ready:
    get:
      summary: Readiness check endpoint
      description: Returns whether the system is ready to serve requests
      operationId: getReadiness
      tags:
        - System
      responses:
        '200':
          description: System is ready
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadinessStatus'
        '503':
          description: System is not ready
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadinessStatus'

  /metrics:
    get:
      summary: System metrics
      description: Returns current system and application metrics
      operationId: getMetrics
      tags:
        - System
      responses:
        '200':
          description: Current system metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemMetrics'
            text/plain:
              schema:
                type: string
                description: Prometheus-formatted metrics

  /predictions:
    post:
      summary: Generate credit score prediction
      description: |
        Generates a credit score prediction with fairness analysis.
        
        The endpoint returns both the predicted score and comprehensive
        fairness metrics to ensure equitable treatment.
      operationId: createPrediction
      tags:
        - Predictions
      security:
        - ApiKeyAuth: []
        - OAuth2: [predict]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PredictionRequest'
      responses:
        '200':
          description: Prediction generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredictionResponse'
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/RateLimited'

  /predictions/batch:
    post:
      summary: Generate batch predictions
      description: Generate predictions for multiple credit applications
      operationId: createBatchPredictions
      tags:
        - Predictions
      security:
        - ApiKeyAuth: []
        - OAuth2: [predict]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchPredictionRequest'
      responses:
        '200':
          description: Batch predictions generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPredictionResponse'
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /models:
    get:
      summary: List available models
      description: Returns a list of available credit scoring models
      operationId: listModels
      tags:
        - Models
      security:
        - ApiKeyAuth: []
        - OAuth2: [read]
      responses:
        '200':
          description: List of available models
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelList'

  /models/{modelId}/evaluate:
    post:
      summary: Evaluate model performance
      description: |
        Evaluates a specific model's performance and fairness metrics
        on provided test data.
      operationId: evaluateModel
      tags:
        - Models
      security:
        - ApiKeyAuth: []
        - OAuth2: [evaluate]
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
          description: Unique identifier for the model
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelEvaluationRequest'
      responses:
        '200':
          description: Model evaluation completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelEvaluationResponse'

  /fairness/metrics:
    get:
      summary: Get available fairness metrics
      description: Returns a list of all available fairness metrics and their descriptions
      operationId: getFairnessMetrics
      tags:
        - Fairness
      responses:
        '200':
          description: List of fairness metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FairnessMetricsList'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://auth.fair-credit-scorer.com/oauth/authorize
          tokenUrl: https://auth.fair-credit-scorer.com/oauth/token
          scopes:
            predict: Generate predictions
            evaluate: Evaluate models
            read: Read model information
            admin: Administrative functions

  schemas:
    HealthStatus:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, unhealthy]
        timestamp:
          type: string
          format: date-time
        uptime_seconds:
          type: number
        version:
          type: string
        environment:
          type: string
      required:
        - status
        - timestamp

    ReadinessStatus:
      type: object
      properties:
        status:
          type: string
          enum: [ready, not_ready]
        timestamp:
          type: string
          format: date-time
        checks:
          type: object
          properties:
            data_generation:
              type: string
              enum: [pass, fail]
            fairness_metrics:
              type: string
              enum: [pass, fail]
        error:
          type: string
          description: Error message if not ready
      required:
        - status
        - timestamp

    SystemMetrics:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        system:
          type: object
          properties:
            cpu_percent:
              type: number
            memory_percent:
              type: number
            disk_percent:
              type: number
        process:
          type: object
          properties:
            memory_mb:
              type: number
            cpu_percent:
              type: number
            threads:
              type: integer
        application:
          type: object
          properties:
            uptime_seconds:
              type: number
            version:
              type: string

    PredictionRequest:
      type: object
      properties:
        applicant_data:
          type: object
          properties:
            age:
              type: integer
              minimum: 18
              maximum: 100
            income:
              type: number
              minimum: 0
            credit_history_length:
              type: integer
              minimum: 0
            existing_debt:
              type: number
              minimum: 0
            employment_status:
              type: string
              enum: [employed, unemployed, self_employed, retired, student]
            protected_attributes:
              type: object
              properties:
                gender:
                  type: string
                  enum: [male, female, other, prefer_not_to_say]
                race:
                  type: string
                ethnicity:
                  type: string
              description: Optional demographic information for fairness analysis
          required:
            - age
            - income
            - credit_history_length
            - existing_debt
            - employment_status
        model_id:
          type: string
          default: baseline
          description: Model to use for prediction
        include_explanation:
          type: boolean
          default: false
          description: Whether to include prediction explanation
      required:
        - applicant_data

    PredictionResponse:
      type: object
      properties:
        prediction_id:
          type: string
        credit_score:
          type: number
          minimum: 300
          maximum: 850
        probability:
          type: number
          minimum: 0
          maximum: 1
        prediction:
          type: string
          enum: [approved, denied]
        confidence:
          type: number
          minimum: 0
          maximum: 1
        fairness_metrics:
          $ref: '#/components/schemas/FairnessMetrics'
        explanation:
          $ref: '#/components/schemas/PredictionExplanation'
        timestamp:
          type: string
          format: date-time
        model_used:
          type: string
      required:
        - prediction_id
        - credit_score
        - probability
        - prediction
        - fairness_metrics
        - timestamp

    BatchPredictionRequest:
      type: object
      properties:
        predictions:
          type: array
          items:
            $ref: '#/components/schemas/PredictionRequest'
          maxItems: 1000
        model_id:
          type: string
          default: baseline
      required:
        - predictions

    BatchPredictionResponse:
      type: object
      properties:
        batch_id:
          type: string
        predictions:
          type: array
          items:
            $ref: '#/components/schemas/PredictionResponse'
        summary:
          type: object
          properties:
            total_processed:
              type: integer
            successful:
              type: integer
            failed:
              type: integer
            aggregate_fairness:
              $ref: '#/components/schemas/FairnessMetrics'

    FairnessMetrics:
      type: object
      properties:
        demographic_parity_difference:
          type: number
          description: Difference in positive prediction rates between groups
        equalized_odds_difference:
          type: number
          description: Difference in true positive rates between groups
        equal_opportunity_difference:
          type: number
          description: Difference in false positive rates between groups
        fairness_score:
          type: number
          minimum: 0
          maximum: 1
          description: Overall fairness score (higher is more fair)
        bias_detected:
          type: boolean
          description: Whether significant bias was detected
        protected_group_analysis:
          type: object
          additionalProperties:
            type: object
            properties:
              approval_rate:
                type: number
              average_score:
                type: number
              sample_size:
                type: integer

    PredictionExplanation:
      type: object
      properties:
        feature_importance:
          type: object
          additionalProperties:
            type: number
          description: Importance scores for each feature
        decision_factors:
          type: array
          items:
            type: object
            properties:
              factor:
                type: string
              impact:
                type: string
                enum: [positive, negative, neutral]
              weight:
                type: number
        counterfactual:
          type: object
          description: What would need to change for different outcome

    ModelList:
      type: object
      properties:
        models:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              description:
                type: string
              version:
                type: string
              accuracy:
                type: number
              fairness_score:
                type: number
              created_at:
                type: string
                format: date-time
              status:
                type: string
                enum: [active, deprecated, experimental]

    ModelEvaluationRequest:
      type: object
      properties:
        test_data:
          type: array
          items:
            $ref: '#/components/schemas/PredictionRequest'
        evaluation_metrics:
          type: array
          items:
            type: string
          description: Specific metrics to compute
        cross_validation:
          type: object
          properties:
            enabled:
              type: boolean
            folds:
              type: integer
              minimum: 2
              maximum: 10

    ModelEvaluationResponse:
      type: object
      properties:
        evaluation_id:
          type: string
        model_id:
          type: string
        performance_metrics:
          type: object
          properties:
            accuracy:
              type: number
            precision:
              type: number
            recall:
              type: number
            f1_score:
              type: number
            roc_auc:
              type: number
        fairness_metrics:
          $ref: '#/components/schemas/FairnessMetrics'
        cross_validation_results:
          type: object
          properties:
            mean_accuracy:
              type: number
            std_accuracy:
              type: number
            fold_results:
              type: array
              items:
                type: object

    FairnessMetricsList:
      type: object
      properties:
        metrics:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              category:
                type: string
                enum: [individual_fairness, group_fairness, causal_fairness]
              formula:
                type: string
              interpretation:
                type: string

    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: object
            timestamp:
              type: string
              format: date-time
            request_id:
              type: string
      required:
        - error

  responses:
    Unauthorized:
      description: Authentication credentials missing or invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    RateLimited:
      description: Too many requests - rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      headers:
        X-RateLimit-Limit:
          schema:
            type: integer
          description: Request limit per hour
        X-RateLimit-Remaining:
          schema:
            type: integer
          description: Requests remaining in current period
        X-RateLimit-Reset:
          schema:
            type: integer
          description: Time when rate limit resets (Unix timestamp)

tags:
  - name: System
    description: System health and monitoring endpoints
  - name: Predictions
    description: Credit score prediction operations
  - name: Models
    description: Model management and evaluation
  - name: Fairness
    description: Fairness analysis and bias detection